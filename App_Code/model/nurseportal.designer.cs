#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sciNursePortal")]
	public partial class nurseportalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInvitation(Invitation instance);
    partial void UpdateInvitation(Invitation instance);
    partial void DeleteInvitation(Invitation instance);
    partial void InsertUserBrowsing(UserBrowsing instance);
    partial void UpdateUserBrowsing(UserBrowsing instance);
    partial void DeleteUserBrowsing(UserBrowsing instance);
    partial void InsertUserLearningPoint(UserLearningPoint instance);
    partial void UpdateUserLearningPoint(UserLearningPoint instance);
    partial void DeleteUserLearningPoint(UserLearningPoint instance);
    partial void InsertUserQuiz(UserQuiz instance);
    partial void UpdateUserQuiz(UserQuiz instance);
    partial void DeleteUserQuiz(UserQuiz instance);
    partial void InsertUserQuizAnswer(UserQuizAnswer instance);
    partial void UpdateUserQuizAnswer(UserQuizAnswer instance);
    partial void DeleteUserQuizAnswer(UserQuizAnswer instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertSearchResult(SearchResult instance);
    partial void UpdateSearchResult(SearchResult instance);
    partial void DeleteSearchResult(SearchResult instance);
    partial void InsertSearchContent(SearchContent instance);
    partial void UpdateSearchContent(SearchContent instance);
    partial void DeleteSearchContent(SearchContent instance);
    partial void InsertSearchKeyword(SearchKeyword instance);
    partial void UpdateSearchKeyword(SearchKeyword instance);
    partial void DeleteSearchKeyword(SearchKeyword instance);
    #endregion
		
		public nurseportalDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["sciNursePortalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public nurseportalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public nurseportalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public nurseportalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public nurseportalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Invitation> Invitations
		{
			get
			{
				return this.GetTable<Invitation>();
			}
		}
		
		public System.Data.Linq.Table<UserBrowsing> UserBrowsings
		{
			get
			{
				return this.GetTable<UserBrowsing>();
			}
		}
		
		public System.Data.Linq.Table<UserLearningPoint> UserLearningPoints
		{
			get
			{
				return this.GetTable<UserLearningPoint>();
			}
		}
		
		public System.Data.Linq.Table<UserQuiz> UserQuizs
		{
			get
			{
				return this.GetTable<UserQuiz>();
			}
		}
		
		public System.Data.Linq.Table<UserQuizAnswer> UserQuizAnswers
		{
			get
			{
				return this.GetTable<UserQuizAnswer>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<SearchResult> SearchResults
		{
			get
			{
				return this.GetTable<SearchResult>();
			}
		}
		
		public System.Data.Linq.Table<SearchContent> SearchContents
		{
			get
			{
				return this.GetTable<SearchContent>();
			}
		}
		
		public System.Data.Linq.Table<SearchKeyword> SearchKeywords
		{
			get
			{
				return this.GetTable<SearchKeyword>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invitation")]
	public partial class Invitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _InvitationCode;
		
		private string _LanguageCode;
		
		private global::EntityStatus _Status;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _ActivationDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvitationCodeChanging(string value);
    partial void OnInvitationCodeChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnStatusChanging(global::EntityStatus value);
    partial void OnStatusChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    #endregion
		
		public Invitation()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvitationCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvitationCode
		{
			get
			{
				return this._InvitationCode;
			}
			set
			{
				if ((this._InvitationCode != value))
				{
					this.OnInvitationCodeChanging(value);
					this.SendPropertyChanging();
					this._InvitationCode = value;
					this.SendPropertyChanged("InvitationCode");
					this.OnInvitationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::EntityStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if ((this._User.HasLoadedOrAssignedValue || this._User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invitation", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invitation1", Storage="_User1", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Invitations1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Invitations1.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBrowsing")]
	public partial class UserBrowsing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.DateTime _PageDate;
		
		private string _PageURL;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPageDateChanging(System.DateTime value);
    partial void OnPageDateChanged();
    partial void OnPageURLChanging(string value);
    partial void OnPageURLChanged();
    #endregion
		
		public UserBrowsing()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDate", DbType="DateTime NOT NULL")]
		public System.DateTime PageDate
		{
			get
			{
				return this._PageDate;
			}
			set
			{
				if ((this._PageDate != value))
				{
					this.OnPageDateChanging(value);
					this.SendPropertyChanging();
					this._PageDate = value;
					this.SendPropertyChanged("PageDate");
					this.OnPageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageURL", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string PageURL
		{
			get
			{
				return this._PageURL;
			}
			set
			{
				if ((this._PageURL != value))
				{
					this.OnPageURLChanging(value);
					this.SendPropertyChanging();
					this._PageURL = value;
					this.SendPropertyChanged("PageURL");
					this.OnPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserBrowsing", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserBrowsings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserBrowsings.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLearningPoint")]
	public partial class UserLearningPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private global::EntityStatus _Status;
		
		private int _Module;
		
		private int _Section;
		
		private int _SubSection;
		
		private string _Tag;
		
		private string _PointText;
		
		private System.DateTime _CreateDate;
		
		private string _LanguageCode;
		
		private int _ControlNumber;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnStatusChanging(global::EntityStatus value);
    partial void OnStatusChanged();
    partial void OnModuleChanging(int value);
    partial void OnModuleChanged();
    partial void OnSectionChanging(int value);
    partial void OnSectionChanged();
    partial void OnSubSectionChanging(int value);
    partial void OnSubSectionChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnPointTextChanging(string value);
    partial void OnPointTextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnControlNumberChanging(int value);
    partial void OnControlNumberChanged();
    #endregion
		
		public UserLearningPoint()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::EntityStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="Int NOT NULL")]
		public int Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this.OnModuleChanging(value);
					this.SendPropertyChanging();
					this._Module = value;
					this.SendPropertyChanged("Module");
					this.OnModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="Int NOT NULL")]
		public int Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSection", DbType="Int NOT NULL")]
		public int SubSection
		{
			get
			{
				return this._SubSection;
			}
			set
			{
				if ((this._SubSection != value))
				{
					this.OnSubSectionChanging(value);
					this.SendPropertyChanging();
					this._SubSection = value;
					this.SendPropertyChanged("SubSection");
					this.OnSubSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(2000)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointText", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string PointText
		{
			get
			{
				return this._PointText;
			}
			set
			{
				if ((this._PointText != value))
				{
					this.OnPointTextChanging(value);
					this.SendPropertyChanging();
					this._PointText = value;
					this.SendPropertyChanged("PointText");
					this.OnPointTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlNumber", DbType="Int")]
		public int ControlNumber
		{
			get
			{
				return this._ControlNumber;
			}
			set
			{
				if ((this._ControlNumber != value))
				{
					this.OnControlNumberChanging(value);
					this.SendPropertyChanging();
					this._ControlNumber = value;
					this.SendPropertyChanged("ControlNumber");
					this.OnControlNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLearningPoint", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLearningPoints.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLearningPoints.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserQuiz")]
	public partial class UserQuiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _Module;
		
		private global::QuizType _QuizType;
		
		private string _LanguageCode;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _CompleteDate;
		
		private int _Score;
		
		private global::EntityStatus _Status;
		
		private int _QuizID;
		
		private EntitySet<UserQuizAnswer> _UserQuizAnswers;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnModuleChanging(int value);
    partial void OnModuleChanged();
    partial void OnQuizTypeChanging(global::QuizType value);
    partial void OnQuizTypeChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompleteDateChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnStatusChanging(global::EntityStatus value);
    partial void OnStatusChanged();
    partial void OnQuizIDChanging(int value);
    partial void OnQuizIDChanged();
    #endregion
		
		public UserQuiz()
		{
			this._UserQuizAnswers = new EntitySet<UserQuizAnswer>(new Action<UserQuizAnswer>(this.attach_UserQuizAnswers), new Action<UserQuizAnswer>(this.detach_UserQuizAnswers));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="Int NOT NULL")]
		public int Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this.OnModuleChanging(value);
					this.SendPropertyChanging();
					this._Module = value;
					this.SendPropertyChanged("Module");
					this.OnModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizType", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::QuizType QuizType
		{
			get
			{
				return this._QuizType;
			}
			set
			{
				if ((this._QuizType != value))
				{
					this.OnQuizTypeChanging(value);
					this.SendPropertyChanging();
					this._QuizType = value;
					this.SendPropertyChanged("QuizType");
					this.OnQuizTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompleteDate
		{
			get
			{
				return this._CompleteDate;
			}
			set
			{
				if ((this._CompleteDate != value))
				{
					this.OnCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._CompleteDate = value;
					this.SendPropertyChanged("CompleteDate");
					this.OnCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::EntityStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", DbType="Int")]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					this.OnQuizIDChanging(value);
					this.SendPropertyChanging();
					this._QuizID = value;
					this.SendPropertyChanged("QuizID");
					this.OnQuizIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserQuiz_UserQuizAnswer", Storage="_UserQuizAnswers", ThisKey="ID", OtherKey="UserQuizID")]
		public EntitySet<UserQuizAnswer> UserQuizAnswers
		{
			get
			{
				return this._UserQuizAnswers;
			}
			set
			{
				this._UserQuizAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserQuiz", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserQuizs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserQuizs.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserQuizAnswers(UserQuizAnswer entity)
		{
			this.SendPropertyChanging();
			entity.UserQuiz = this;
		}
		
		private void detach_UserQuizAnswers(UserQuizAnswer entity)
		{
			this.SendPropertyChanging();
			entity.UserQuiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserQuizAnswer")]
	public partial class UserQuizAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserQuizID;
		
		private string _QuestionTag;
		
		private string _QuestionText;
		
		private string _Answer;
		
		private System.DateTime _DisplayDate;
		
		private System.DateTime _AnswerDate;
		
		private bool _IsCorrect;
		
		private System.Nullable<int> _Module;
		
		private global::QuestionType _QuestionType;
		
		private EntityRef<UserQuiz> _UserQuiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserQuizIDChanging(int value);
    partial void OnUserQuizIDChanged();
    partial void OnQuestionTagChanging(string value);
    partial void OnQuestionTagChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnDisplayDateChanging(System.DateTime value);
    partial void OnDisplayDateChanged();
    partial void OnAnswerDateChanging(System.DateTime value);
    partial void OnAnswerDateChanged();
    partial void OnIsCorrectChanging(bool value);
    partial void OnIsCorrectChanged();
    partial void OnQuestionNumberChanging(System.Nullable<int> value);
    partial void OnQuestionNumberChanged();
    partial void OnQuestionTypeChanging(global::QuestionType value);
    partial void OnQuestionTypeChanged();
    #endregion
		
		public UserQuizAnswer()
		{
			this._UserQuiz = default(EntityRef<UserQuiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserQuizID", DbType="Int NOT NULL")]
		public int UserQuizID
		{
			get
			{
				return this._UserQuizID;
			}
			set
			{
				if ((this._UserQuizID != value))
				{
					if (this._UserQuiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserQuizIDChanging(value);
					this.SendPropertyChanging();
					this._UserQuizID = value;
					this.SendPropertyChanged("UserQuizID");
					this.OnUserQuizIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTag", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuestionTag
		{
			get
			{
				return this._QuestionTag;
			}
			set
			{
				if ((this._QuestionTag != value))
				{
					this.OnQuestionTagChanging(value);
					this.SendPropertyChanging();
					this._QuestionTag = value;
					this.SendPropertyChanged("QuestionTag");
					this.OnQuestionTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(50)")]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayDate", DbType="DateTime NOT NULL")]
		public System.DateTime DisplayDate
		{
			get
			{
				return this._DisplayDate;
			}
			set
			{
				if ((this._DisplayDate != value))
				{
					this.OnDisplayDateChanging(value);
					this.SendPropertyChanging();
					this._DisplayDate = value;
					this.SendPropertyChanged("DisplayDate");
					this.OnDisplayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerDate", DbType="DateTime NOT NULL")]
		public System.DateTime AnswerDate
		{
			get
			{
				return this._AnswerDate;
			}
			set
			{
				if ((this._AnswerDate != value))
				{
					this.OnAnswerDateChanging(value);
					this.SendPropertyChanging();
					this._AnswerDate = value;
					this.SendPropertyChanged("AnswerDate");
					this.OnAnswerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit NOT NULL")]
		public bool IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="Int")]
		public System.Nullable<int> QuestionNumber
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this.OnQuestionNumberChanging(value);
					this.SendPropertyChanging();
					this._Module = value;
					this.SendPropertyChanged("QuestionNumber");
					this.OnQuestionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::QuestionType QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserQuiz_UserQuizAnswer", Storage="_UserQuiz", ThisKey="UserQuizID", OtherKey="ID", IsForeignKey=true)]
		public UserQuiz UserQuiz
		{
			get
			{
				return this._UserQuiz.Entity;
			}
			set
			{
				UserQuiz previousValue = this._UserQuiz.Entity;
				if (((previousValue != value) 
							|| (this._UserQuiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserQuiz.Entity = null;
						previousValue.UserQuizAnswers.Remove(this);
					}
					this._UserQuiz.Entity = value;
					if ((value != null))
					{
						value.UserQuizAnswers.Add(this);
						this._UserQuizID = value.ID;
					}
					else
					{
						this._UserQuizID = default(int);
					}
					this.SendPropertyChanged("UserQuiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private global::UserType _UserType;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private global::EntityStatus _Status;
		
		private string _DefaultLanguageCode;
		
		private System.DateTime _CreateDate;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _PostalCode;
		
		private string _Country;
		
		private string _Profession;
		
		private string _Language;
		
		private System.Nullable<bool> _SurveyDoesCountryRecognize;
		
		private System.Nullable<bool> _SurveyConsiderNurse;
		
		private string _SurveyTimeSeeingPatients;
		
		private string _SurveyTimeSeeingNonPatients;
		
		private string _SurveyYearsQualified;
		
		private string _SurveyYearsMSPatients;
		
		private string _SurveyMSCarePatients;
		
		private System.Nullable<bool> _SurveyCertificateRCN;
		
		private System.Nullable<bool> _SurveyCertificateICN;
		
		private string _SurveyMSPortionRelapsing;
		
		private string _SurveyMSPortionSecondary;
		
		private string _SurveyMSPortionPrimary;
		
		private System.Nullable<bool> _SurveyCertificateNMBI;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<Invitation> _Invitations1;
		
		private EntitySet<UserBrowsing> _UserBrowsings;
		
		private EntitySet<UserLearningPoint> _UserLearningPoints;
		
		private EntitySet<UserQuiz> _UserQuizs;
		
		private EntitySet<UserLogin> _UserLogins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserTypeChanging(global::UserType value);
    partial void OnUserTypeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(global::EntityStatus value);
    partial void OnStatusChanged();
    partial void OnDefaultLanguageCodeChanging(string value);
    partial void OnDefaultLanguageCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnProfessionChanging(string value);
    partial void OnProfessionChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnSurveyDoesCountryRecognizeChanging(System.Nullable<bool> value);
    partial void OnSurveyDoesCountryRecognizeChanged();
    partial void OnSurveyConsiderNurseChanging(System.Nullable<bool> value);
    partial void OnSurveyConsiderNurseChanged();
    partial void OnSurveyTimeSeeingPatientsChanging(string value);
    partial void OnSurveyTimeSeeingPatientsChanged();
    partial void OnSurveyTimeSeeingNonPatientsChanging(string value);
    partial void OnSurveyTimeSeeingNonPatientsChanged();
    partial void OnSurveyYearsQualifiedChanging(string value);
    partial void OnSurveyYearsQualifiedChanged();
    partial void OnSurveyYearsMSPatientsChanging(string value);
    partial void OnSurveyYearsMSPatientsChanged();
    partial void OnSurveyMSCarePatientsChanging(string value);
    partial void OnSurveyMSCarePatientsChanged();
    partial void OnSurveyCertificateRCNChanging(System.Nullable<bool> value);
    partial void OnSurveyCertificateRCNChanged();
    partial void OnSurveyCertificateICNChanging(System.Nullable<bool> value);
    partial void OnSurveyCertificateICNChanged();
    partial void OnSurveyMSPortionRelapsingChanging(string value);
    partial void OnSurveyMSPortionRelapsingChanged();
    partial void OnSurveyMSPortionSecondaryChanging(string value);
    partial void OnSurveyMSPortionSecondaryChanged();
    partial void OnSurveyMSPortionPrimaryChanging(string value);
    partial void OnSurveyMSPortionPrimaryChanged();
    partial void OnSurveyCertificateNMBIChanging(System.Nullable<bool> value);
    partial void OnSurveyCertificateNMBIChanged();
    #endregion
		
		public User()
		{
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._Invitations1 = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations1), new Action<Invitation>(this.detach_Invitations1));
			this._UserBrowsings = new EntitySet<UserBrowsing>(new Action<UserBrowsing>(this.attach_UserBrowsings), new Action<UserBrowsing>(this.detach_UserBrowsings));
			this._UserLearningPoints = new EntitySet<UserLearningPoint>(new Action<UserLearningPoint>(this.attach_UserLearningPoints), new Action<UserLearningPoint>(this.detach_UserLearningPoints));
			this._UserQuizs = new EntitySet<UserQuiz>(new Action<UserQuiz>(this.attach_UserQuizs), new Action<UserQuiz>(this.detach_UserQuizs));
			this._UserLogins = new EntitySet<UserLogin>(new Action<UserLogin>(this.attach_UserLogins), new Action<UserLogin>(this.detach_UserLogins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::UserType UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public global::EntityStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string DefaultLanguageCode
		{
			get
			{
				return this._DefaultLanguageCode;
			}
			set
			{
				if ((this._DefaultLanguageCode != value))
				{
					this.OnDefaultLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageCode = value;
					this.SendPropertyChanged("DefaultLanguageCode");
					this.OnDefaultLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(200)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(200)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="VarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profession", DbType="VarChar(50)")]
		public string Profession
		{
			get
			{
				return this._Profession;
			}
			set
			{
				if ((this._Profession != value))
				{
					this.OnProfessionChanging(value);
					this.SendPropertyChanging();
					this._Profession = value;
					this.SendPropertyChanged("Profession");
					this.OnProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="VarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyDoesCountryRecognize", DbType="Bit")]
		public System.Nullable<bool> SurveyDoesCountryRecognize
		{
			get
			{
				return this._SurveyDoesCountryRecognize;
			}
			set
			{
				if ((this._SurveyDoesCountryRecognize != value))
				{
					this.OnSurveyDoesCountryRecognizeChanging(value);
					this.SendPropertyChanging();
					this._SurveyDoesCountryRecognize = value;
					this.SendPropertyChanged("SurveyDoesCountryRecognize");
					this.OnSurveyDoesCountryRecognizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyConsiderNurse", DbType="Bit")]
		public System.Nullable<bool> SurveyConsiderNurse
		{
			get
			{
				return this._SurveyConsiderNurse;
			}
			set
			{
				if ((this._SurveyConsiderNurse != value))
				{
					this.OnSurveyConsiderNurseChanging(value);
					this.SendPropertyChanging();
					this._SurveyConsiderNurse = value;
					this.SendPropertyChanged("SurveyConsiderNurse");
					this.OnSurveyConsiderNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyTimeSeeingPatients", DbType="VarChar(50)")]
		public string SurveyTimeSeeingPatients
		{
			get
			{
				return this._SurveyTimeSeeingPatients;
			}
			set
			{
				if ((this._SurveyTimeSeeingPatients != value))
				{
					this.OnSurveyTimeSeeingPatientsChanging(value);
					this.SendPropertyChanging();
					this._SurveyTimeSeeingPatients = value;
					this.SendPropertyChanged("SurveyTimeSeeingPatients");
					this.OnSurveyTimeSeeingPatientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyTimeSeeingNonPatients", DbType="VarChar(50)")]
		public string SurveyTimeSeeingNonPatients
		{
			get
			{
				return this._SurveyTimeSeeingNonPatients;
			}
			set
			{
				if ((this._SurveyTimeSeeingNonPatients != value))
				{
					this.OnSurveyTimeSeeingNonPatientsChanging(value);
					this.SendPropertyChanging();
					this._SurveyTimeSeeingNonPatients = value;
					this.SendPropertyChanged("SurveyTimeSeeingNonPatients");
					this.OnSurveyTimeSeeingNonPatientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyYearsQualified", DbType="VarChar(50)")]
		public string SurveyYearsQualified
		{
			get
			{
				return this._SurveyYearsQualified;
			}
			set
			{
				if ((this._SurveyYearsQualified != value))
				{
					this.OnSurveyYearsQualifiedChanging(value);
					this.SendPropertyChanging();
					this._SurveyYearsQualified = value;
					this.SendPropertyChanged("SurveyYearsQualified");
					this.OnSurveyYearsQualifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyYearsMSPatients", DbType="VarChar(50)")]
		public string SurveyYearsMSPatients
		{
			get
			{
				return this._SurveyYearsMSPatients;
			}
			set
			{
				if ((this._SurveyYearsMSPatients != value))
				{
					this.OnSurveyYearsMSPatientsChanging(value);
					this.SendPropertyChanging();
					this._SurveyYearsMSPatients = value;
					this.SendPropertyChanged("SurveyYearsMSPatients");
					this.OnSurveyYearsMSPatientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyMSCarePatients", DbType="VarChar(50)")]
		public string SurveyMSCarePatients
		{
			get
			{
				return this._SurveyMSCarePatients;
			}
			set
			{
				if ((this._SurveyMSCarePatients != value))
				{
					this.OnSurveyMSCarePatientsChanging(value);
					this.SendPropertyChanging();
					this._SurveyMSCarePatients = value;
					this.SendPropertyChanged("SurveyMSCarePatients");
					this.OnSurveyMSCarePatientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyCertificateRCN", DbType="Bit")]
		public System.Nullable<bool> SurveyCertificateRCN
		{
			get
			{
				return this._SurveyCertificateRCN;
			}
			set
			{
				if ((this._SurveyCertificateRCN != value))
				{
					this.OnSurveyCertificateRCNChanging(value);
					this.SendPropertyChanging();
					this._SurveyCertificateRCN = value;
					this.SendPropertyChanged("SurveyCertificateRCN");
					this.OnSurveyCertificateRCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyCertificateICN", DbType="Bit")]
		public System.Nullable<bool> SurveyCertificateICN
		{
			get
			{
				return this._SurveyCertificateICN;
			}
			set
			{
				if ((this._SurveyCertificateICN != value))
				{
					this.OnSurveyCertificateICNChanging(value);
					this.SendPropertyChanging();
					this._SurveyCertificateICN = value;
					this.SendPropertyChanged("SurveyCertificateICN");
					this.OnSurveyCertificateICNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyMSPortionRelapsing", DbType="Varchar(50)")]
		public string SurveyMSPortionRelapsing
		{
			get
			{
				return this._SurveyMSPortionRelapsing;
			}
			set
			{
				if ((this._SurveyMSPortionRelapsing != value))
				{
					this.OnSurveyMSPortionRelapsingChanging(value);
					this.SendPropertyChanging();
					this._SurveyMSPortionRelapsing = value;
					this.SendPropertyChanged("SurveyMSPortionRelapsing");
					this.OnSurveyMSPortionRelapsingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyMSPortionSecondary", DbType="Varchar(50)")]
		public string SurveyMSPortionSecondary
		{
			get
			{
				return this._SurveyMSPortionSecondary;
			}
			set
			{
				if ((this._SurveyMSPortionSecondary != value))
				{
					this.OnSurveyMSPortionSecondaryChanging(value);
					this.SendPropertyChanging();
					this._SurveyMSPortionSecondary = value;
					this.SendPropertyChanged("SurveyMSPortionSecondary");
					this.OnSurveyMSPortionSecondaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyMSPortionPrimary", DbType="Varchar(50)")]
		public string SurveyMSPortionPrimary
		{
			get
			{
				return this._SurveyMSPortionPrimary;
			}
			set
			{
				if ((this._SurveyMSPortionPrimary != value))
				{
					this.OnSurveyMSPortionPrimaryChanging(value);
					this.SendPropertyChanging();
					this._SurveyMSPortionPrimary = value;
					this.SendPropertyChanged("SurveyMSPortionPrimary");
					this.OnSurveyMSPortionPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyCertificateNMBI", DbType="Bit")]
		public System.Nullable<bool> SurveyCertificateNMBI
		{
			get
			{
				return this._SurveyCertificateNMBI;
			}
			set
			{
				if ((this._SurveyCertificateNMBI != value))
				{
					this.OnSurveyCertificateNMBIChanging(value);
					this.SendPropertyChanging();
					this._SurveyCertificateNMBI = value;
					this.SendPropertyChanged("SurveyCertificateNMBI");
					this.OnSurveyCertificateNMBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invitation", Storage="_Invitations", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invitation1", Storage="_Invitations1", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Invitation> Invitations1
		{
			get
			{
				return this._Invitations1;
			}
			set
			{
				this._Invitations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserBrowsing", Storage="_UserBrowsings", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserBrowsing> UserBrowsings
		{
			get
			{
				return this._UserBrowsings;
			}
			set
			{
				this._UserBrowsings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLearningPoint", Storage="_UserLearningPoints", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserLearningPoint> UserLearningPoints
		{
			get
			{
				return this._UserLearningPoints;
			}
			set
			{
				this._UserLearningPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserQuiz", Storage="_UserQuizs", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserQuiz> UserQuizs
		{
			get
			{
				return this._UserQuizs;
			}
			set
			{
				this._UserQuizs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLogin", Storage="_UserLogins", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserLogin> UserLogins
		{
			get
			{
				return this._UserLogins;
			}
			set
			{
				this._UserLogins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Invitations1(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Invitations1(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserBrowsings(UserBrowsing entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserBrowsings(UserBrowsing entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLearningPoints(UserLearningPoint entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLearningPoints(UserLearningPoint entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserQuizs(UserQuiz entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserQuizs(UserQuiz entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private string _LanguageCode;
		
		private System.DateTime _LoginDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnLoginDateChanging(System.DateTime value);
    partial void OnLoginDateChanged();
    #endregion
		
		public UserLogin()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLogin", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLogins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLogins.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchResult")]
	public partial class SearchResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SearchKeywordID;
		
		private int _PageID;
		
		private string _Title;
		
		private string _Description;
		
		private string _Path;
		
		private int _MatchCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSearchKeywordIDChanging(int value);
    partial void OnSearchKeywordIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnMatchCountChanging(int value);
    partial void OnMatchCountChanged();
    #endregion
		
		public SearchResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchKeywordID", DbType="Int NOT NULL")]
		public int SearchKeywordID
		{
			get
			{
				return this._SearchKeywordID;
			}
			set
			{
				if ((this._SearchKeywordID != value))
				{
					this.OnSearchKeywordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchKeywordID = value;
					this.SendPropertyChanged("SearchKeywordID");
					this.OnSearchKeywordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchCount", DbType="Int NOT NULL")]
		public int MatchCount
		{
			get
			{
				return this._MatchCount;
			}
			set
			{
				if ((this._MatchCount != value))
				{
					this.OnMatchCountChanging(value);
					this.SendPropertyChanging();
					this._MatchCount = value;
					this.SendPropertyChanged("MatchCount");
					this.OnMatchCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchContent")]
	public partial class SearchContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _PageContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPageContentChanging(string value);
    partial void OnPageContentChanged();
    #endregion
		
		public SearchContent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PageContent
		{
			get
			{
				return this._PageContent;
			}
			set
			{
				if ((this._PageContent != value))
				{
					this.OnPageContentChanging(value);
					this.SendPropertyChanging();
					this._PageContent = value;
					this.SendPropertyChanged("PageContent");
					this.OnPageContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchKeyword")]
	public partial class SearchKeyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Keywords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    #endregion
		
		public SearchKeyword()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
